# backend/admin/dashboard_widgets.py - –®–í–ò–î–ö–Ü –î–Ü–á –¢–ê –í–Ü–î–ñ–ï–¢–ò
from django.contrib import admin
from django.urls import path
from django.shortcuts import render, redirect
from django.contrib.admin.views.decorators import staff_member_required
from django.contrib import messages
from django.utils.html import format_html
from django.db.models import Count, Sum
from datetime import datetime, timedelta


# –®–≤–∏–¥–∫—ñ –¥—ñ—ó –¥–ª—è –∞–¥–º—ñ–Ω–∫–∏
@staff_member_required
def quick_actions_view(request):
    """–°—Ç–æ—Ä—ñ–Ω–∫–∞ —à–≤–∏–¥–∫–∏—Ö –¥—ñ–π"""
    context = {
        'title': '–®–≤–∏–¥–∫—ñ –¥—ñ—ó',
        'actions': [
            {
                'name': '–°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Ä–º—ñ–Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                'description': '–®–≤–∏–¥–∫–µ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∏—Ä–æ–±–Ω–∏—á–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
                'url': '/admin/production/productionorder/add/?priority=urgent',
                'icon': 'üöÄ'
            },
            {
                'name': '–ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å–∫–ª–∞–¥',
                'description': '–®–≤–∏–¥–∫–∏–π –æ–≥–ª—è–¥ –∑–∞–ª–∏—à–∫—ñ–≤ –Ω–∞ —Å–∫–ª–∞–¥—ñ',
                'url': '/admin/backend/product/?o=1',
                'icon': 'üì¶'
            },
            {
                'name': '–°—Ç–≤–æ—Ä–∏—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç –ø—Ä–∏—Ö–æ–¥—É',
                'description': '–û–ø—Ä–∏–±—É—Ç–∫—É–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É',
                'url': '/admin/backend/document/add/?doc_type=receipt',
                'icon': 'üìÑ'
            },
            {
                'name': '–î–æ–¥–∞—Ç–∏ –Ω–æ–≤–æ–≥–æ –∫–ª—ñ—î–Ω—Ç–∞',
                'description': '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞',
                'url': '/admin/backend/customer/add/',
                'icon': 'üë§'
            }
        ]
    }
    return render(request, 'admin/quick_actions.html', context)


@staff_member_required
def dashboard_stats_view(request):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –¥–∞—à–±–æ—Ä–¥—É"""
    today = datetime.now().date()

    try:
        # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –º–æ–¥–µ–ª—ñ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ
        from backend.models import Document, Product

        stats = {
            'documents_today': Document.objects.filter(date__date=today).count(),
            'total_products': Product.objects.count(),
            'recent_documents': Document.objects.order_by('-created_at')[:5]
        }

        # –Ø–∫—â–æ —î –º–æ–¥—É–ª—å –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞
        try:
            from production.models import ProductionOrder
            stats['production_orders_active'] = ProductionOrder.objects.filter(
                status__in=['planned', 'in_progress']
            ).count()
        except ImportError:
            stats['production_orders_active'] = 0

    except Exception as e:
        stats = {
            'error': f'–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}',
            'documents_today': 0,
            'total_products': 0,
            'production_orders_active': 0,
            'recent_documents': []
        }

    context = {
        'title': '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º–∏',
        'stats': stats
    }
    return render(request, 'admin/dashboard_stats.html', context)


# –î–æ–¥–∞—Ç–∫–æ–≤—ñ URL –¥–ª—è –∞–¥–º—ñ–Ω–∫–∏
def get_admin_urls():
    return [
        path('quick-actions/', quick_actions_view, name='quick_actions'),
        path('dashboard-stats/', dashboard_stats_view, name='dashboard_stats'),
    ]


# –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ
class EnhancedAdminSite(admin.AdminSite):
    """–†–æ–∑—à–∏—Ä–µ–Ω–∞ –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—å"""

    def get_urls(self):
        urls = super().get_urls()
        custom_urls = get_admin_urls()
        return custom_urls + urls

    def index(self, request, extra_context=None):
        """–ü–æ–∫—Ä–∞—â–µ–Ω–∞ –≥–æ–ª–æ–≤–Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫–∞"""
        if extra_context is None:
            extra_context = {}

        # –®–≤–∏–¥–∫—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è
        quick_links = [
            {
                'title': 'üì¶ –¢–æ–≤–∞—Ä–∏ —Ç–∞ —Å–∫–ª–∞–¥',
                'links': [
                    {'name': '–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Ç–æ–≤–∞—Ä–∏', 'url': '/admin/backend/product/'},
                    {'name': '–î–æ–¥–∞—Ç–∏ —Ç–æ–≤–∞—Ä', 'url': '/admin/backend/product/add/'},
                    {'name': '–ì—Ä—É–ø–∏ —Ç–æ–≤–∞—Ä—ñ–≤', 'url': '/admin/backend/productgroup/'},
                ]
            },
            {
                'title': 'üßæ –î–æ–∫—É–º–µ–Ω—Ç–∏',
                'links': [
                    {'name': '–í—Å—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏', 'url': '/admin/backend/document/'},
                    {'name': '–ü—Ä–∏—Ö—ñ–¥ —Ç–æ–≤–∞—Ä—É', 'url': '/admin/backend/document/add/?doc_type=receipt'},
                    {'name': '–ü—Ä–æ–¥–∞–∂', 'url': '/admin/backend/document/add/?doc_type=sale'},
                ]
            },
            {
                'title': 'üè≠ –í–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–æ',
                'links': [
                    {'name': '–í–∏—Ä–æ–±–Ω–∏—á—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è', 'url': '/admin/production/productionorder/'},
                    {'name': '–í–∏—Ä–æ–±–Ω–∏—á—ñ –ª—ñ–Ω—ñ—ó', 'url': '/admin/production/productionline/'},
                    {'name': '–ü–ª–∞–Ω–∏ –≤–∏—Ä–æ–±–Ω–∏—Ü—Ç–≤–∞', 'url': '/admin/production/productionplan/'},
                ]
            },
            {
                'title': 'üë• –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∏',
                'links': [
                    {'name': '–ö–ª—ñ—î–Ω—Ç–∏', 'url': '/admin/backend/customer/'},
                    {'name': '–ü–æ—Å—Ç–∞—á–∞–ª—å–Ω–∏–∫–∏', 'url': '/admin/backend/supplier/'},
                    {'name': '–î–æ–¥–∞—Ç–∏ –∫–ª—ñ—î–Ω—Ç–∞', 'url': '/admin/backend/customer/add/'},
                ]
            }
        ]

        extra_context.update({
            'quick_links': quick_links,
            'show_quick_actions': True,
            'dashboard_title': '–ì–æ–ª–æ–≤–Ω–∞ –ø–∞–Ω–µ–ª—å ERP —Å–∏—Å—Ç–µ–º–∏'
        })

        return super().index(request, extra_context)


# –ü–æ–∫—Ä–∞—â–µ–Ω–Ω—è —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–µ–ª–µ–π –∞–¥–º—ñ–Ω–∫–∏
def enhance_admin_models():
    """–î–æ–¥–∞—î –∫–æ—Ä–∏—Å–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –¥–æ —ñ—Å–Ω—É—é—á–∏—Ö –º–æ–¥–µ–ª–µ–π –∞–¥–º—ñ–Ω–∫–∏"""

    # –î–æ–¥–∞—î–º–æ –∫–æ–ª—å–æ—Ä–æ–≤—ñ —Å—Ç–∞—Ç—É—Å–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤
    try:
        from backend.admin.document_admin import DocumentAdmin
        from backend.models import Document

        # –†–æ–∑—à–∏—Ä—é—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Å—Ç–∞—Ç—É—Å—É
        original_colored_status = DocumentAdmin.colored_status

        def enhanced_colored_status(self, obj):
            status_icons = {
                'draft': 'üìù',
                'posted': '‚úÖ',
                'cancelled': '‚ùå'
            }
            icon = status_icons.get(obj.status, '‚ùì')
            return format_html(
                '{} {}',
                icon,
                original_colored_status(self, obj)
            )

        DocumentAdmin.colored_status = enhanced_colored_status

    except ImportError:
        pass  # –Ø–∫—â–æ –º–æ–¥–µ–ª—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞


# HTML —à–∞–±–ª–æ–Ω–∏ –¥–ª—è —à–≤–∏–¥–∫–∏—Ö –¥—ñ–π
QUICK_ACTIONS_TEMPLATE = """
{% extends "admin/base_site.html" %}
{% block content %}
<div class="dashboard">
    <h1>{{ title }}</h1>
    <div class="module">
        {% for action in actions %}
        <div style="margin: 10px; padding: 15px; border: 1px solid #ddd; border-radius: 5px;">
            <h3>{{ action.icon }} {{ action.name }}</h3>
            <p>{{ action.description }}</p>
            <a href="{{ action.url }}" class="button">–ü–µ—Ä–µ–π—Ç–∏</a>
        </div>
        {% endfor %}
    </div>
</div>
{% endblock %}
"""

DASHBOARD_STATS_TEMPLATE = """
{% extends "admin/base_site.html" %}
{% block content %}
<div class="dashboard">
    <h1>{{ title }}</h1>
    <div class="module">
        <h3>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å—å–æ–≥–æ–¥–Ω—ñ</h3>
        <ul>
            <li>–î–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ: {{ stats.documents_today }}</li>
            <li>–ó–∞–≥–∞–ª–æ–º —Ç–æ–≤–∞—Ä—ñ–≤: {{ stats.total_products }}</li>
            <li>–ê–∫—Ç–∏–≤–Ω–∏—Ö –≤–∏—Ä–æ–±–Ω–∏—á–∏—Ö –∑–∞–º–æ–≤–ª–µ–Ω—å: {{ stats.production_orders_active }}</li>
        </ul>

        {% if stats.recent_documents %}
        <h3>üìÑ –û—Å—Ç–∞–Ω–Ω—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∏</h3>
        <ul>
            {% for doc in stats.recent_documents %}
            <li>{{ doc.doc_number }} - {{ doc.get_doc_type_display }} ({{ doc.created_at|date:"H:i" }})</li>
            {% endfor %}
        </ul>
        {% endif %}
    </div>
</div>
{% endblock %}
"""