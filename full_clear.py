# full_clear.py
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nashsoft.settings')
django.setup()

from django.db import connection, transaction
from django.contrib.auth.models import User, Group
from django.contrib.contenttypes.models import ContentType
from backend.models import *
from settlements.models import *


def full_clear():
    print("üßπ –ü–û–í–ù–ï –û–ß–ò–©–ï–ù–ù–Ø –ë–ê–ó–ò –î–ê–ù–ò–•")
    print("=" * 50)

    with transaction.atomic():
        with connection.cursor() as cursor:
            # –í–∏–º–∏–∫–∞—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            cursor.execute("SET session_replication_role = replica;")

            # –¢–∞–±–ª–∏—Ü—ñ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É
            tables_to_clear = [
                # –û–ø–µ—Ä–∞—Ü—ñ–π–Ω—ñ –¥–∞–Ω—ñ
                'backend_auditlog',
                'settlements_moneyoperation',
                'settlements_moneydocument',
                'settlements_moneyledgerentry',
                'backend_operation',
                'backend_documentitem',
                'backend_document',
                'backend_pricesettingitem',
                'backend_pricesettingdocument',

                # –î–æ–≤—ñ–¥–Ω–∏–∫–∏
                'backend_productunitconversion',
                'backend_productcalculationitem',
                'backend_productcalculation',
                'settlements_contract',
                'backend_appuser_interfaces',
                'backend_appuser',
                'backend_departmentwarehouseaccess',
                'backend_department',
                'backend_tradepoint',
                'backend_product',
                'backend_productgroup',
                'backend_warehouse',
                'backend_firm',
                'backend_customer',
                'backend_supplier',
                'backend_company',

                # –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
                'backend_accountingsettings',
                'backend_documentsettings',
                'backend_pricetype',
                'backend_customertype',
                'backend_paymenttype',
                'backend_unit',
                'backend_interface',
                'settlements_account',

                # –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–≤
                'auth_group_permissions',
                'auth_user_groups',
                'auth_user_user_permissions',
                'auth_group',

                # Django —Å–∏—Å—Ç–µ–º–Ω—ñ
                'django_session',
                'django_admin_log',
            ]

            for table in tables_to_clear:
                try:
                    cursor.execute(f"TRUNCATE TABLE {table} RESTART IDENTITY CASCADE;")
                    print(f"   ‚úÖ –û—á–∏—â–µ–Ω–æ: {table}")
                except Exception as e:
                    print(f"   ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è {table}: {e}")

            # –í–∏–¥–∞–ª—è—î–º–æ –∑–≤–∏—á–∞–π–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ (–∑–∞–ª–∏—à–∞—î–º–æ –∞–¥–º—ñ–Ω—ñ–≤)
            try:
                deleted_users = User.objects.filter(is_superuser=False).count()
                User.objects.filter(is_superuser=False).delete()
                print(f"   ‚úÖ –í–∏–¥–∞–ª–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {deleted_users}")
            except Exception as e:
                print(f"   ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤: {e}")

            # –í—ñ–¥–Ω–æ–≤–ª—é—î–º–æ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
            cursor.execute("SET session_replication_role = DEFAULT;")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –û–ß–ò–©–ï–ù–ù–Ø:")

    tables_to_check = [
        ('–ö–æ–º–ø–∞–Ω—ñ—ó', Company),
        ('–§—ñ—Ä–º–∏', Firm),
        ('–°–∫–ª–∞–¥–∏', Warehouse),
        ('–¢–æ–≤–∞—Ä–∏', Product),
        ('–î–æ–∫—É–º–µ–Ω—Ç–∏', Document),
        ('–û–ø–µ—Ä–∞—Ü—ñ—ó', Operation),
        ('–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ', User),
    ]

    for name, model in tables_to_check:
        try:
            count = model.objects.count()
            status = "‚úÖ" if count == 0 or (name == "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ" and count <= 1) else "‚ö†Ô∏è"
            print(f"   {status} {name}: {count}")
        except Exception as e:
            print(f"   ‚ùå {name}: –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É")

    print(f"\nüéØ –ë–ê–ó–ê –ì–û–¢–û–í–ê –î–û –°–¢–í–û–†–ï–ù–ù–Ø –¢–ï–°–¢–û–í–ò–• –î–ê–ù–ò–•!")


if __name__ == "__main__":
    full_clear()