# test_finance_full.py - –ù–û–í–ò–ô –§–ê–ô–õ

import os
import sys
import django

sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nashsoft.settings')
django.setup()

from decimal import Decimal
from datetime import date
from backend.models import Company


def test_finance_simple():
    print("üí∞ –ü–†–û–°–¢–ò–ô –¢–ï–°–¢ –§–Ü–ù–ê–ù–°–û–í–û–ì–û –ú–û–î–£–õ–Ø")
    print("=" * 50)

    # ========== –ü–Ü–î–ì–û–¢–û–í–ö–ê –î–ê–ù–ò–• ==========
    try:
        company = Company.objects.first()
        if not company:
            company = Company.objects.create(name='–¢–µ—Å—Ç–æ–≤–∞ –∫–æ–º–ø–∞–Ω—ñ—è')

        print(f"‚úÖ –ö–æ–º–ø–∞–Ω—ñ—è: {company.name}")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏: {e}")
        return

    # ========== –¢–ï–°–¢–£–í–ê–ù–ù–Ø –†–û–ó–†–ê–•–£–ù–ö–Ü–í ==========
    print(f"\nüßÆ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –§–Ü–ù–ê–ù–°–û–í–ò–• –†–û–ó–†–ê–•–£–ù–ö–Ü–í:")

    # –¢–µ—Å—Ç –ü–î–í
    price_without_vat = Decimal('1000.00')
    vat_rate = Decimal('0.20')
    vat_amount = price_without_vat * vat_rate
    price_with_vat = price_without_vat + vat_amount

    print(f"   üíµ –¶—ñ–Ω–∞ –±–µ–∑ –ü–î–í: {price_without_vat} –≥—Ä–Ω")
    print(f"   üìä –°—Ç–∞–≤–∫–∞ –ü–î–í: {vat_rate * 100}%")
    print(f"   üßæ –°—É–º–∞ –ü–î–í: {vat_amount} –≥—Ä–Ω")
    print(f"   üí∞ –¶—ñ–Ω–∞ –∑ –ü–î–í: {price_with_vat} –≥—Ä–Ω")

    # –¢–µ—Å—Ç –≤—ñ–¥—Å–æ—Ç–∫—ñ–≤
    principal = Decimal('50000.00')
    interest_rate = Decimal('0.15')  # 15% —Ä—ñ—á–Ω–∏—Ö
    monthly_rate = interest_rate / 12
    monthly_payment = principal * monthly_rate

    print(f"\nüìà –†–û–ó–†–ê–•–£–ù–û–ö –í–Ü–î–°–û–¢–ö–Ü–í:")
    print(f"   üí≥ –û—Å–Ω–æ–≤–Ω–∞ —Å—É–º–∞: {principal} –≥—Ä–Ω")
    print(f"   üìä –†—ñ—á–Ω–∞ —Å—Ç–∞–≤–∫–∞: {interest_rate * 100}%")
    print(f"   üìÖ –ú—ñ—Å—è—á–Ω–∞ —Å—Ç–∞–≤–∫–∞: {monthly_rate * 100:.2f}%")
    print(f"   üí∏ –ú—ñ—Å—è—á–Ω–∏–π –ø–ª–∞—Ç—ñ–∂: {monthly_payment:.2f} –≥—Ä–Ω")

    # –¢–µ—Å—Ç –≤–∞–ª—é—Ç–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π
    uah_amount = Decimal('36500.00')
    usd_rate = Decimal('36.50')
    usd_amount = uah_amount / usd_rate

    print(f"\nüí± –í–ê–õ–Æ–¢–ù–Ü –†–û–ó–†–ê–•–£–ù–ö–ò:")
    print(f"   üá∫üá¶ –°—É–º–∞ –≤ –≥—Ä–∏–≤–Ω—è—Ö: {uah_amount} UAH")
    print(f"   üìä –ö—É—Ä—Å USD/UAH: {usd_rate}")
    print(f"   üá∫üá∏ –°—É–º–∞ –≤ –¥–æ–ª–∞—Ä–∞—Ö: ${usd_amount:.2f} USD")

    print(f"\n‚úÖ –í–°–Ü –§–Ü–ù–ê–ù–°–û–í–Ü –†–û–ó–†–ê–•–£–ù–ö–ò –ü–†–û–ô–®–õ–ò –£–°–ü–Ü–®–ù–û!")


if __name__ == "__main__":
    test_finance_simple()