# business_reports.py
# –í–ò–ü–†–ê–í–õ–ï–ù–ò–ô –∑–≤—ñ—Ç –∑ –∫–æ—Ä–µ–∫—Ç–Ω–∏–º–∏ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∞–º–∏ –ü–î–í —Ç–∞ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å—å–∫–æ—é –ª–æ–≥—ñ–∫–æ—é

import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nashsoft.settings')
django.setup()

from decimal import Decimal
from backend.models import *
from backend.operations.stock import FIFOStockManager
import requests


def header(text):
    print(f"\n{'=' * 70}")
    print(f"üìä {text}")
    print(f"{'=' * 70}")


def section(text):
    print(f"\nüîç {text}")
    print(f"   {'-' * 60}")


def success(text):
    print(f"   ‚úÖ {text}")


def info(text):
    print(f"   ‚ÑπÔ∏è  {text}")


def warning(text):
    print(f"   ‚ö†Ô∏è  {text}")


def error(text):
    print(f"   ‚ùå {text}")


def business_reports():
    header("–ó–í–Ü–¢ –ü–û –ë–Ü–ó–ù–ï–°-–°–¶–ï–ù–ê–†–Ü–Æ")
    print("ü•© –§–û–ü: –§–∞—Ä—à ‚Üí –ü–∞–∫–µ—Ç–∏–∫–∏")
    print("ü•É –¢–ó–û–í: –í—ñ—Å–∫—ñ ‚Üí –ü–æ—Ä—Ü—ñ—ó")

    # ========== –ü–ï–†–ï–í–Ü–†–ö–ê –î–ê–ù–ò–• ==========
    try:
        fop_firm = Firm.objects.get(name__icontains='–§–û–ü')
        tov_firm = Firm.objects.get(name__icontains='–¢–ó–û–í')

        fop_warehouse = Warehouse.objects.get(name__icontains='–§–û–ü')
        tov_warehouse = Warehouse.objects.get(name__icontains='–¢–ó–û–í')

        meat_product = Product.objects.get(name__icontains='–ø–∞–∫–µ—Ç–∏–∫—É')
        whiskey_product = Product.objects.get(name__icontains='–ø–æ—Ä—Ü—ñ—è')

        company = Company.objects.first()

        success("–í—Å—ñ –¥–∞–Ω—ñ –∑–Ω–∞–π–¥–µ–Ω–æ")

    except Exception as e:
        error(f"–î–∞–Ω—ñ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ: {e}")
        warning("–°–ø–æ—á–∞—Ç–∫—É –∑–∞–ø—É—Å—Ç—ñ—Ç—å: python create_business_scenario.py")
        return

    # ========== –ë–ê–ó–û–í–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø ==========
    section("–ë–ê–ó–û–í–ê –Ü–ù–§–û–†–ú–ê–¶–Ü–Ø")

    print(f"   üè¢ –ö–æ–º–ø–∞–Ω—ñ—è: {company.name}")
    print(f"   üìÖ –î–∞—Ç–∞ –∑–≤—ñ—Ç—É: {datetime.now().strftime('%d.%m.%Y %H:%M')}")
    print("")
    print(f"   üè≠ –§–Ü–†–ú–ò:")
    print(f"      ‚Ä¢ {fop_firm.name}")
    print(f"        –¢–∏–ø: {fop_firm.vat_type}")
    print(f"        –ü–î–í: {'–ù–ï –ü–õ–ê–¢–ò–¢–¨' if fop_firm.vat_type == '–§–û–ü' else '–ü–õ–ê–¢–ò–¢–¨'}")
    print(f"        –°–∫–ª–∞–¥: {fop_warehouse.name}")
    print("")
    print(f"      ‚Ä¢ {tov_firm.name}")
    print(f"        –¢–∏–ø: {tov_firm.vat_type}")
    print(f"        –ü–î–í: {'–ù–ï –ü–õ–ê–¢–ò–¢–¨' if tov_firm.vat_type == '–§–û–ü' else '–ü–õ–ê–¢–ò–¢–¨'}")
    print(f"        –°–∫–ª–∞–¥: {tov_warehouse.name}")

    # ========== –ê–ù–ê–õ–Ü–ó –î–û–ö–£–ú–ï–ù–¢–Ü–í ==========
    section("–ê–ù–ê–õ–Ü–ó –î–û–ö–£–ú–ï–ù–¢–Ü–í")

    print(f"   üìÑ –î–û–ö–£–ú–ï–ù–¢–ò –§–û–ü:")
    fop_docs = Document.objects.filter(firm=fop_firm).order_by('doc_type', 'doc_number')
    for doc in fop_docs:
        status_icon = "‚úÖ" if doc.status == 'posted' else "‚è≥"
        print(f"      {status_icon} {doc.doc_number} - {doc.get_doc_type_display()}")

    print(f"   üìÑ –î–û–ö–£–ú–ï–ù–¢–ò –¢–ó–û–í:")
    tov_docs = Document.objects.filter(firm=tov_firm).order_by('doc_type', 'doc_number')
    for doc in tov_docs:
        status_icon = "‚úÖ" if doc.status == 'posted' else "‚è≥"
        print(f"      {status_icon} {doc.doc_number} - {doc.get_doc_type_display()}")

    # ========== –ó–ê–õ–ò–®–ö–ò –ù–ê –°–ö–õ–ê–î–ê–• ==========
    section("–ó–ê–õ–ò–®–ö–ò –ù–ê –°–ö–õ–ê–î–ê–•")

    # –§–û–ü –∑–∞–ª–∏—à–∫–∏
    meat_stock = FIFOStockManager.get_available_stock(meat_product, fop_warehouse, fop_firm)
    meat_value = FIFOStockManager.get_stock_value(meat_product, fop_warehouse, fop_firm)
    meat_avg_cost = float(meat_value / meat_stock) if meat_stock > 0 else 0

    print(f"   ü•© –§–û–ü - –§–ê–†–® –í –ü–ê–ö–ï–¢–ò–ö–ê–•:")
    print(f"      –ó–∞–ª–∏—à–æ–∫: {meat_stock} –ø–∞–∫–µ—Ç–∏–∫—ñ–≤")
    print(f"      –í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–∏—à–∫—ñ–≤: {meat_value:.2f} –≥—Ä–Ω")
    print(f"      –°–µ—Ä–µ–¥–Ω—è —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {meat_avg_cost:.2f} –≥—Ä–Ω/–ø–∞–∫")

    # –¢–ó–û–í –∑–∞–ª–∏—à–∫–∏
    whiskey_stock = FIFOStockManager.get_available_stock(whiskey_product, tov_warehouse, tov_firm)
    whiskey_value = FIFOStockManager.get_stock_value(whiskey_product, tov_warehouse, tov_firm)
    whiskey_avg_cost = float(whiskey_value / whiskey_stock) if whiskey_stock > 0 else 0

    print(f"   ü•É –¢–ó–û–í - –í–Ü–°–ö–Ü –ü–û–†–¶–Ü–á:")
    print(f"      –ó–∞–ª–∏—à–æ–∫: {whiskey_stock} –ø–æ—Ä—Ü—ñ–π")
    print(f"      –í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–∏—à–∫—ñ–≤: {whiskey_value:.2f} –≥—Ä–Ω")
    print(f"      –°–µ—Ä–µ–¥–Ω—è —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {whiskey_avg_cost:.2f} –≥—Ä–Ω/–ø–æ—Ä—Ü")

    # –¢–ó–û–í –∑–∞–ª–∏—à–∫–∏ –∫–æ–Ω—å—è–∫—É
    try:
        cognac_product = Product.objects.get(name__icontains='–ö–æ–Ω—å—è–∫')
        cognac_stock = FIFOStockManager.get_available_stock(cognac_product, tov_warehouse, tov_firm)
        cognac_value = FIFOStockManager.get_stock_value(cognac_product, tov_warehouse, tov_firm)
        cognac_avg_cost = float(cognac_value / cognac_stock) if cognac_stock > 0 else 0

        print(f"   ü•É –¢–ó–û–í - –ö–û–ù–¨–Ø–ö –ü–†–ï–ú–Ü–£–ú:")
        print(f"      –ó–∞–ª–∏—à–æ–∫: {cognac_stock} –ø–ª—è—à–æ–∫")
        print(f"      –í–∞—Ä—Ç—ñ—Å—Ç—å –∑–∞–ª–∏—à–∫—ñ–≤: {cognac_value:.2f} –≥—Ä–Ω")
        print(f"      –°–µ—Ä–µ–¥–Ω—è —Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {cognac_avg_cost:.2f} –≥—Ä–Ω/–ø–ª—è—à–∫–∞")
    except Product.DoesNotExist:
        cognac_product = None
        cognac_stock = 0
        cognac_value = 0

    # ========== –ê–ù–ê–õ–Ü–ó –û–ü–ï–†–ê–¶–Ü–ô ==========
    section("–ê–ù–ê–õ–Ü–ó –û–ü–ï–†–ê–¶–Ü–ô")

    print(f"   üìä –û–ü–ï–†–ê–¶–Ü–á –§–û–ü (–§–ê–†–®):")
    meat_operations = Operation.objects.filter(
        product=meat_product,
        warehouse=fop_warehouse
    ).order_by('created_at')

    for op in meat_operations:
        if op.direction == 'in':
            print(f"      ‚¨áÔ∏è  –ù–∞–¥—Ö–æ–¥–∂–µ–Ω–Ω—è: +{op.quantity} –ø–∞–∫ | –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {op.cost_price:.2f}")
        else:
            print(
                f"      ‚¨ÜÔ∏è  –ü—Ä–æ–¥–∞–∂: -{op.quantity} –ø–∞–∫ | –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {op.cost_price:.2f} | –¶—ñ–Ω–∞: {op.sale_price:.2f}")

    print(f"   üìä –û–ü–ï–†–ê–¶–Ü–á –¢–ó–û–í (–í–Ü–°–ö–Ü):")
    whiskey_operations = Operation.objects.filter(
        product=whiskey_product,
        warehouse=tov_warehouse
    ).order_by('created_at')

    for op in whiskey_operations:
        if op.direction == 'in':
            print(f"      ‚¨áÔ∏è  –ù–∞–¥—Ö–æ–¥–∂–µ–Ω–Ω—è: +{op.quantity} –ø–æ—Ä—Ü | –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {op.cost_price:.2f}")
        else:
            print(
                f"      ‚¨ÜÔ∏è  –ü—Ä–æ–¥–∞–∂: -{op.quantity} –ø–æ—Ä—Ü | –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {op.cost_price:.2f} | –¶—ñ–Ω–∞: {op.sale_price:.2f}")

    # ========== –†–û–ó–†–ê–•–£–ù–û–ö –ü–†–ò–ë–£–¢–ö–û–í–û–°–¢–Ü ==========
    section("–ê–ù–ê–õ–Ü–ó –ü–†–ò–ë–£–¢–ö–û–í–û–°–¢–Ü")

    # –§–û–ü —Ñ–∞—Ä—à
    meat_sales = Operation.objects.filter(
        product=meat_product,
        direction='out',
        sale_price__isnull=False
    )

    meat_qty_sold = sum(float(op.quantity) for op in meat_sales)
    meat_total_cost = sum(float(op.total_cost) for op in meat_sales)
    meat_total_revenue = sum(float(op.total_sale) for op in meat_sales)
    meat_profit = meat_total_revenue - meat_total_cost
    meat_margin = (meat_profit / meat_total_revenue * 100) if meat_total_revenue > 0 else 0

    print(f"   ü•© –§–û–ü - –ü–†–ò–ë–£–¢–ö–û–í–Ü–°–¢–¨ –§–ê–†–®–£:")
    print(f"      –ü—Ä–æ–¥–∞–Ω–æ: {meat_qty_sold} –ø–∞–∫–µ—Ç–∏–∫—ñ–≤")
    print(f"      –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {meat_total_cost:.2f} –≥—Ä–Ω")
    print(f"      –í–∏—Ä—É—á–∫–∞: {meat_total_revenue:.2f} –≥—Ä–Ω")
    print(f"      –ü—Ä–∏–±—É—Ç–æ–∫: {meat_profit:.2f} –≥—Ä–Ω")
    print(f"      –ú–∞—Ä–∂–∞: {meat_margin:.1f}%")
    print(f"      –ü–î–í: 0.00 –≥—Ä–Ω (–§–û–ü –Ω–µ –ø–ª–∞—Ç–∏—Ç—å)")

    # –¢–ó–û–í –≤—ñ—Å–∫—ñ
    whiskey_sales = Operation.objects.filter(
        product=whiskey_product,
        direction='out',
        sale_price__isnull=False
    )

    whiskey_qty_sold = sum(float(op.quantity) for op in whiskey_sales)
    whiskey_total_cost = sum(float(op.total_cost) for op in whiskey_sales)
    whiskey_total_revenue = sum(float(op.total_sale) for op in whiskey_sales)
    whiskey_profit = whiskey_total_revenue - whiskey_total_cost
    whiskey_margin = (whiskey_profit / whiskey_total_revenue * 100) if whiskey_total_revenue > 0 else 0

    # –¢–ó–û–í –∫–æ–Ω—å—è–∫
    try:
        cognac_product = Product.objects.get(name__icontains='–ö–æ–Ω—å—è–∫')
        cognac_sales = Operation.objects.filter(
            product=cognac_product,
            direction='out',
            sale_price__isnull=False
        )

        cognac_qty_sold = sum(float(op.quantity) for op in cognac_sales)
        cognac_total_cost = sum(float(op.total_cost) for op in cognac_sales)
        cognac_total_revenue = sum(float(op.total_sale) for op in cognac_sales)
        cognac_profit = cognac_total_revenue - cognac_total_cost
        cognac_margin = (cognac_profit / cognac_total_revenue * 100) if cognac_total_revenue > 0 else 0

        print(f"   ü•É –¢–ó–û–í - –ü–†–ò–ë–£–¢–ö–û–í–Ü–°–¢–¨ –ö–û–ù–¨–Ø–ö–£:")
        print(f"      –ü—Ä–æ–¥–∞–Ω–æ: {cognac_qty_sold} –ø–ª—è—à–æ–∫")
        print(f"      –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {cognac_total_cost:.2f} –≥—Ä–Ω")
        print(f"      –í–∏—Ä—É—á–∫–∞: {cognac_total_revenue:.2f} –≥—Ä–Ω")
        print(f"      –ü—Ä–∏–±—É—Ç–æ–∫: {cognac_profit:.2f} –≥—Ä–Ω")
        print(f"      –ú–∞—Ä–∂–∞: {cognac_margin:.1f}%")
    except Product.DoesNotExist:
        cognac_qty_sold = 0
        cognac_total_cost = 0
        cognac_total_revenue = 0
        cognac_profit = 0
        cognac_margin = 0

    # –ó–∞–≥–∞–ª—å–Ω—ñ –ø–æ–∫–∞–∑–Ω–∏–∫–∏ –¢–ó–û–í
    total_tov_revenue = whiskey_total_revenue + cognac_total_revenue
    total_tov_cost = whiskey_total_cost + cognac_total_cost
    total_tov_profit = whiskey_profit + cognac_profit
    total_tov_margin = (total_tov_profit / total_tov_revenue * 100) if total_tov_revenue > 0 else 0

    print(f"   ü•É –¢–ó–û–í - –ü–†–ò–ë–£–¢–ö–û–í–Ü–°–¢–¨ –í–Ü–°–ö–Ü:")
    print(f"      –ü—Ä–æ–¥–∞–Ω–æ: {whiskey_qty_sold} –ø–æ—Ä—Ü—ñ–π")
    print(f"      –°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å: {whiskey_total_cost:.2f} –≥—Ä–Ω")
    print(f"      –í–∏—Ä—É—á–∫–∞: {whiskey_total_revenue:.2f} –≥—Ä–Ω")
    print(f"      –ü—Ä–∏–±—É—Ç–æ–∫: {whiskey_profit:.2f} –≥—Ä–Ω")
    print(f"      –ú–∞—Ä–∂–∞: {whiskey_margin:.1f}%")

    # ========== –ü–†–ê–í–ò–õ–¨–ù–ò–ô –†–û–ó–†–ê–•–£–ù–û–ö –ü–î–í ==========
    section("–î–ï–¢–ê–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó –ü–î–í (–¢–ó–û–í)")

    # –ü–î–í –∑ –ø–æ–∫—É–ø–∫–∏ (–¥–æ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è)
    purchase_vat_total = 0
    purchase_items = DocumentItem.objects.filter(
        document__doc_type='receipt',
        document__firm=tov_firm
    )
    print(f"   üì• –ü–î–í –ó –ü–û–ö–£–ü–ö–ò (–¥–æ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è):")
    for item in purchase_items:
        vat_per_unit = float(item.vat_amount or 0)
        quantity = float(item.quantity)
        item_vat_total = vat_per_unit * quantity
        purchase_vat_total += item_vat_total
        print(f"      ‚Ä¢ {item.product.name}: {quantity} x {vat_per_unit:.2f} = {item_vat_total:.2f} –≥—Ä–Ω")

    # –ü–î–í –∑ –ø—Ä–æ–¥–∞–∂—É (–Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–∏–π)
    sales_vat_total = 0
    sale_items = DocumentItem.objects.filter(
        document__doc_type='sale',
        document__firm=tov_firm
    )
    print(f"   üì§ –ü–î–í –ó –ü–†–û–î–ê–ñ–£ (–Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–∏–π):")
    for item in sale_items:
        vat_per_unit = float(item.vat_amount or 0)
        quantity = float(item.quantity)
        item_vat_total = vat_per_unit * quantity
        sales_vat_total += item_vat_total
        print(f"      ‚Ä¢ {item.product.name}: {quantity} x {vat_per_unit:.2f} = {item_vat_total:.2f} –≥—Ä–Ω")

    # –ü–î–í –¥–æ –¥–æ–ø–ª–∞—Ç–∏
    vat_to_pay = sales_vat_total - purchase_vat_total

    print(f"   üí∞ –ü–Ü–î–°–£–ú–û–ö –ü–î–í:")
    print(f"      –ü–î–í –∑ –ø–æ–∫—É–ø–∫–∏: -{purchase_vat_total:.2f} –≥—Ä–Ω (–¥–æ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è)")
    print(f"      –ü–î–í –∑ –ø—Ä–æ–¥–∞–∂—É: +{sales_vat_total:.2f} –≥—Ä–Ω (–Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–∏–π)")
    print(f"      –ü–î–í –¥–æ –¥–æ–ø–ª–∞—Ç–∏: {vat_to_pay:.2f} –≥—Ä–Ω")

    # ========== –ü–û–†–Ü–í–ù–Ø–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó ==========
    section("–ü–û–†–Ü–í–ù–Ø–õ–¨–ù–ò–ô –ê–ù–ê–õ–Ü–ó")

    print(f"   ‚öñÔ∏è  –ü–û–†–Ü–í–ù–Ø–ù–ù–Ø –ë–Ü–ó–ù–ï–°–Ü–í:")
    print(f"      {'–ü–æ–∫–∞–∑–Ω–∏–∫':<20} {'–§–û–ü (–§–∞—Ä—à)':<15} {'–¢–ó–û–í (–ê–ª–∫–æ–≥–æ–ª—å)':<20}")
    print(f"      {'-' * 20} {'-' * 15} {'-' * 20}")
    print(f"      {'–í–∏—Ä—É—á–∫–∞ –ë–ï–ó –ü–î–í':<20} {meat_total_revenue:<15.2f} {total_tov_revenue:<20.2f}")
    print(f"      {'–°–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å':<20} {meat_total_cost:<15.2f} {total_tov_cost:<20.2f}")
    print(f"      {'–ü—Ä–∏–±—É—Ç–æ–∫':<20} {meat_profit:<15.2f} {total_tov_profit:<20.2f}")
    print(f"      {'–ú–∞—Ä–∂–∞ %':<20} {meat_margin:<15.1f} {total_tov_margin:<20.1f}")
    print(f"      {'–ü–î–í –¥–æ –¥–æ–ø–ª–∞—Ç–∏':<20} {0:<15.2f} {vat_to_pay:<20.2f}")

    # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –ª—ñ–¥–µ—Ä–∞
    if meat_profit > total_tov_profit:
        leader = "ü•© –§–û–ü (–§–∞—Ä—à)"
        advantage = meat_profit - total_tov_profit
    else:
        leader = "ü•É –¢–ó–û–í (–ê–ª–∫–æ–≥–æ–ª—å)"
        advantage = total_tov_profit - meat_profit

    print(f"   üèÜ –õ–Ü–î–ï–† –ü–†–ò–ë–£–¢–ö–û–í–û–°–¢–Ü: {leader}")
    print(f"   üí∞ –ü–µ—Ä–µ–≤–∞–≥–∞: +{advantage:.2f} –≥—Ä–Ω")

    # ========== –ê–ù–ê–õ–Ü–ó –§–ê–°–£–í–ê–ù–ù–Ø ==========
    section("–ê–ù–ê–õ–Ü–ó –§–ê–°–£–í–ê–ù–ù–Ø")

    print(f"   üîÑ –ï–§–ï–ö–¢–ò–í–ù–Ü–°–¢–¨ –§–ê–°–£–í–ê–ù–ù–Ø:")
    print("")
    print(f"   ü•© –§–û–ü - –§–ê–†–®:")
    print(f"      –ó–∞–∫—É–ø–∏–ª–∏: 1 –∫–≥ –∑–∞ 100 –≥—Ä–Ω")
    print(f"      –û—Ç—Ä–∏–º–∞–ª–∏: 10 –ø–∞–∫–µ—Ç–∏–∫—ñ–≤ (—Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å 10 –≥—Ä–Ω/–ø–∞–∫)")
    print(f"      –ü—Ä–æ–¥–∞–ª–∏: {meat_qty_sold} –ø–∞–∫ –ø–æ 50 –≥—Ä–Ω")
    print(f"      –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {meat_qty_sold}/10 = {meat_qty_sold / 10 * 100:.0f}% —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó")
    print("")
    print(f"   ü•É –¢–ó–û–í - –í–Ü–°–ö–Ü:")
    print(f"      –ó–∞–∫—É–ø–∏–ª–∏: 1 –ø–ª—è—à–∫—É –∑–∞ 500 –≥—Ä–Ω + –ü–î–í")
    print(f"      –û—Ç—Ä–∏–º–∞–ª–∏: 14 –ø–æ—Ä—Ü—ñ–π (—Å–æ–±—ñ–≤–∞—Ä—Ç—ñ—Å—Ç—å ~35.7 –≥—Ä–Ω/–ø–æ—Ä—Ü)")
    print(f"      –ü—Ä–æ–¥–∞–ª–∏: {whiskey_qty_sold} –ø–æ—Ä—Ü –ø–æ 100 –≥—Ä–Ω")
    print(f"      –ï—Ñ–µ–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: {whiskey_qty_sold}/14 = {whiskey_qty_sold / 14 * 100:.0f}% —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó")

    # ========== ROI –ê–ù–ê–õ–Ü–ó ==========
    section("–ê–ù–ê–õ–Ü–ó –†–ï–ù–¢–ê–ë–ï–õ–¨–ù–û–°–¢–Ü (ROI)")

    # ROI —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫–∏
    meat_investment = 100  # 1 –∫–≥ —Ñ–∞—Ä—à—É
    meat_roi = (meat_profit / meat_investment) * 100 if meat_investment > 0 else 0

    tov_investment = 500 + 100  # 1 –ø–ª—è—à–∫–∞ –≤—ñ—Å–∫—ñ + –∫–æ–Ω—å—è–∫ (–±–µ–∑ –ü–î–í)
    tov_roi = (total_tov_profit / tov_investment) * 100 if tov_investment > 0 else 0

    print(f"   üìà –†–ï–ù–¢–ê–ë–ï–õ–¨–ù–Ü–°–¢–¨ –Ü–ù–í–ï–°–¢–ò–¶–Ü–ô:")
    print(f"      –§–û–ü –§–∞—Ä—à:")
    print(f"        –Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è: {meat_investment} –≥—Ä–Ω")
    print(f"        –ü—Ä–∏–±—É—Ç–æ–∫: {meat_profit:.2f} –≥—Ä–Ω")
    print(f"        ROI: {meat_roi:.1f}%")
    print("")
    print(f"      –¢–ó–û–í –ê–ª–∫–æ–≥–æ–ª—å:")
    print(f"        –Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ—è: {tov_investment} –≥—Ä–Ω")
    print(f"        –ü—Ä–∏–±—É—Ç–æ–∫: {total_tov_profit:.2f} –≥—Ä–Ω")
    print(f"        ROI: {tov_roi:.1f}%")

    roi_leader = "–§–û–ü (–§–∞—Ä—à)" if meat_roi > tov_roi else "–¢–ó–û–í (–ê–ª–∫–æ–≥–æ–ª—å)"
    print(f"   üéØ –ù–∞–π–≤–∏—â–∞ —Ä–µ–Ω—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å: {roi_leader}")

    # ========== –ü–û–î–ê–¢–ö–û–í–ò–ô –ê–ù–ê–õ–Ü–ó ==========
    section("–ü–û–î–ê–¢–ö–û–í–ò–ô –ê–ù–ê–õ–Ü–ó")

    print(f"   üßæ –ü–û–î–ê–¢–ö–û–í–Ü –ó–û–ë–û–í'–Ø–ó–ê–ù–ù–Ø:")
    print("")
    print(f"   –§–û–ü –ú'–Ø–°–ù–ò–ö:")
    print(f"      –°—Ç–∞—Ç—É—Å –ü–î–í: –ù–µ–ø–ª–∞—Ç–Ω–∏–∫")
    print(f"      –û–±–æ—Ä–æ—Ç: {meat_total_revenue:.2f} –≥—Ä–Ω")
    print(f"      –ü–î–í –¥–æ –¥–æ–ø–ª–∞—Ç–∏: 0.00 –≥—Ä–Ω")
    print(f"      –Ñ–¥–∏–Ω–∏–π –ø–æ–¥–∞—Ç–æ–∫: –∑–∞ –≤–∏–±—Ä–∞–Ω–æ—é –≥—Ä—É–ø–æ—é")
    print("")
    print(f"   –¢–ó–û–í –ê–õ–ö–û–ì–û–õ–¨–ù–Ü –ù–ê–ü–û–á:")
    print(f"      –°—Ç–∞—Ç—É—Å –ü–î–í: –ü–ª–∞—Ç–Ω–∏–∫")
    print(f"      –û–±–æ—Ä–æ—Ç –ë–ï–ó –ü–î–í: {total_tov_revenue:.2f} –≥—Ä–Ω")
    print(f"      –û–±–æ—Ä–æ—Ç –ó –ü–î–í: {total_tov_revenue + sales_vat_total:.2f} –≥—Ä–Ω")
    print(f"      –ü–î–í –∑ –ø–æ–∫—É–ø–∫–∏: -{purchase_vat_total:.2f} –≥—Ä–Ω (–¥–æ –≤—ñ–¥—à–∫–æ–¥—É–≤–∞–Ω–Ω—è)")
    print(f"      –ü–î–í –∑ –ø—Ä–æ–¥–∞–∂—É: +{sales_vat_total:.2f} –≥—Ä–Ω (–Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–∏–π)")
    print(f"      –ü–î–í –¥–æ –¥–æ–ø–ª–∞—Ç–∏: {vat_to_pay:.2f} –≥—Ä–Ω")
    print(f"      –ü–æ–¥–∞—Ç–æ–∫ –Ω–∞ –ø—Ä–∏–±—É—Ç–æ–∫: {total_tov_profit * 0.18:.2f} –≥—Ä–Ω (18%)")

    # ========== API –¢–ï–°–¢–£–í–ê–ù–ù–Ø ==========
    section("–¢–ï–°–¢–£–í–ê–ù–ù–Ø API")

    base_url = "http://127.0.0.1:8000"

    # –¢–µ—Å—Ç –ø—Ä–∏–±—É—Ç–∫–æ–≤–æ—Å—Ç—ñ
    try:
        response = requests.get(f"{base_url}/api/reports/profitability/", timeout=5)
        if response.status_code == 200:
            data = response.json()
            success(f"API –ø—Ä–∏–±—É—Ç–∫–æ–≤–æ—Å—Ç—ñ: {data['data']['totals']['total_products']} —Ç–æ–≤–∞—Ä—ñ–≤")
        else:
            warning(f"API –ø—Ä–∏–±—É—Ç–∫–æ–≤–æ—Å—Ç—ñ: –∫–æ–¥ {response.status_code}")
    except Exception as e:
        warning(f"API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ: {str(e)[:50]}...")

    # –¢–µ—Å—Ç –∑–∞–ª–∏—à–∫—ñ–≤ –§–û–ü
    try:
        response = requests.get(f"{base_url}/api/reports/stock-value/?firm_id={fop_firm.id}", timeout=5)
        if response.status_code == 200:
            data = response.json()
            success(f"API –∑–∞–ª–∏—à–∫—ñ–≤ –§–û–ü: {data['data']['total_value']} –≥—Ä–Ω")
        else:
            warning(f"API –∑–∞–ª–∏—à–∫—ñ–≤ –§–û–ü: –∫–æ–¥ {response.status_code}")
    except:
        warning("API –∑–∞–ª–∏—à–∫—ñ–≤ –§–û–ü –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ")

    # –¢–µ—Å—Ç –∑–∞–ª–∏—à–∫—ñ–≤ –¢–ó–û–í
    try:
        response = requests.get(f"{base_url}/api/reports/stock-value/?firm_id={tov_firm.id}", timeout=5)
        if response.status_code == 200:
            data = response.json()
            success(f"API –∑–∞–ª–∏—à–∫—ñ–≤ –¢–ó–û–í: {data['data']['total_value']} –≥—Ä–Ω")
        else:
            warning(f"API –∑–∞–ª–∏—à–∫—ñ–≤ –¢–ó–û–í: –∫–æ–¥ {response.status_code}")
    except:
        warning("API –∑–∞–ª–∏—à–∫—ñ–≤ –¢–ó–û–í –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–µ")

    # ========== –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á ==========
    section("–ë–Ü–ó–ù–ï–°-–†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á")

    print(f"   üí° –°–¢–†–ê–¢–ï–ì–Ü–ß–ù–Ü –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    print("")

    if meat_roi > tov_roi:
        print(f"   üéØ –ü–†–Ü–û–†–ò–¢–ï–¢: –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –±—ñ–∑–Ω–µ—Å—É –∑ —Ñ–∞—Ä—à–µ–º")
        print(f"      ‚Ä¢ –í–∏—â–∏–π ROI ({meat_roi:.1f}% vs {tov_roi:.1f}%)")
        print(f"      ‚Ä¢ –ú–µ–Ω—à—ñ –ø–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–æ–±–æ–≤'—è–∑–∞–Ω–Ω—è")
        print(f"      ‚Ä¢ –®–≤–∏–¥—à–∞ –æ–±–æ—Ä–æ—Ç–Ω—ñ—Å—Ç—å")
    else:
        print(f"   üéØ –ü–†–Ü–û–†–ò–¢–ï–¢: –†–æ–∑—à–∏—Ä–µ–Ω–Ω—è –∞–ª–∫–æ–≥–æ–ª—å–Ω–æ–≥–æ –±—ñ–∑–Ω–µ—Å—É")
        print(f"      ‚Ä¢ –í–∏—â–∏–π –∞–±—Å–æ–ª—é—Ç–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫ ({total_tov_profit:.0f} –≥—Ä–Ω)")
        print(f"      ‚Ä¢ –ü—Ä–µ–º—ñ–∞–ª—å–Ω–∏–π —Å–µ–≥–º–µ–Ω—Ç –∫–æ–Ω—å—è–∫—É")
        print(f"      ‚Ä¢ –î–∏–≤–µ—Ä—Å–∏—Ñ—ñ–∫–æ–≤–∞–Ω–∏–π –ø–æ—Ä—Ç—Ñ–µ–ª—å")

    print(f"   üìä –û–ü–ï–†–ê–¶–Ü–ô–ù–Ü –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    print(f"      ‚Ä¢ –û–ø—Ç–∏–º—ñ–∑—É–≤–∞—Ç–∏ –∑–∞–ª–∏—à–∫–∏ (—É–Ω–∏–∫–∞—Ç–∏ –∑–∞—Ç–æ–≤–∞—Ä—é–≤–∞–Ω–Ω—è)")
    print(f"      ‚Ä¢ –ü—ñ–¥–≤–∏—â–∏—Ç–∏ % —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ñ–∞—Å–æ–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤")
    print(f"      ‚Ä¢ –†–æ–∑–≥–ª—è–Ω—É—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü—ñ—é —Ñ–∞—Å—É–≤–∞–Ω–Ω—è")
    print(f"      ‚Ä¢ –í–ø—Ä–æ–≤–∞–¥–∏—Ç–∏ —Å–∏—Å—Ç–µ–º—É –∫–æ–Ω—Ç—Ä–æ–ª—é —è–∫–æ—Å—Ç—ñ")

    print(f"   üí∞ –§–Ü–ù–ê–ù–°–û–í–Ü –†–ï–ö–û–ú–ï–ù–î–ê–¶–Ü–á:")
    print(f"      ‚Ä¢ –í–µ–¥–µ–Ω–Ω—è –æ–∫—Ä–µ–º–æ–≥–æ –æ–±–ª—ñ–∫—É –ø–æ —Ñ—ñ—Ä–º–∞—Ö")
    print(f"      ‚Ä¢ –ü–ª–∞–Ω—É–≤–∞–Ω–Ω—è –ø–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–ª–∞—Ç–µ–∂—ñ–≤ –¢–ó–û–í")
    print(f"      ‚Ä¢ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –º–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ —Ç–æ–≤–∞—Ä—ñ–≤")
    print(f"      ‚Ä¢ –ê–Ω–∞–ª—ñ–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–∏—Ö —Ü—ñ–Ω")

    # ========== –§–Ü–ù–ê–õ–¨–ù–ò–ô –ü–Ü–î–°–£–ú–û–ö ==========
    header("–§–Ü–ù–ê–õ–¨–ù–ò–ô –ü–Ü–î–°–£–ú–û–ö")

    total_profit = meat_profit + total_tov_profit
    total_revenue = meat_total_revenue + total_tov_revenue
    total_vat = vat_to_pay

    print(f"üíº –ó–ê–ì–ê–õ–¨–ù–Ü –†–ï–ó–£–õ–¨–¢–ê–¢–ò:")
    print(f"   –°—É–∫—É–ø–Ω–∞ –≤–∏—Ä—É—á–∫–∞: {total_revenue:.2f} –≥—Ä–Ω")
    print(f"   –°—É–∫—É–ø–Ω–∏–π –ø—Ä–∏–±—É—Ç–æ–∫: {total_profit:.2f} –≥—Ä–Ω")
    print(f"   –ó–∞–≥–∞–ª—å–Ω–∞ –º–∞—Ä–∂–∞: {(total_profit / total_revenue * 100):.1f}%")
    print(f"   –°—É–∫—É–ø–Ω–∏–π –ü–î–í: {total_vat:.2f} –≥—Ä–Ω")
    print("")
    print(f"üèÜ –í–ò–°–ù–û–í–ö–ò:")
    print(f"   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Å–æ–±—ñ–≤–∞—Ä—Ç–æ—Å—Ç—ñ –ü–†–ê–¶–Æ–Ñ")
    print(f"   ‚úÖ –ü–î–í –ª–æ–≥—ñ–∫–∞ –ü–†–ê–¶–Æ–Ñ")
    print(f"   ‚úÖ FIFO —Ñ–∞—Å—É–≤–∞–Ω–Ω—è –ü–†–ê–¶–Æ–Ñ")
    print(f"   ‚úÖ –ë—ñ–∑–Ω–µ—Å-–º–æ–¥–µ–ª—å –ü–†–ò–ë–£–¢–ö–û–í–ê")
    print("")
    print(f"üöÄ –°–¢–ê–¢–£–°: –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –î–û –†–û–ó–®–ò–†–ï–ù–ù–Ø!")


if __name__ == "__main__":
    from datetime import datetime
    business_reports()