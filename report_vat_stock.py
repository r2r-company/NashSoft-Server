# report_vat_stock.py
import os
import django
from decimal import Decimal

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nashsoft.settings')
django.setup()

from backend.models import *
from backend.operations.stock import FIFOStockManager


def show_stock_and_vat():
    print("üìä –ó–í–Ü–¢ –ü–û –ó–ê–õ–ò–®–ö–ê–• –Ü –ü–î–í")
    print("=" * 40)

    company = Company.objects.first()
    warehouse = Warehouse.objects.get(name='–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∏–π —Å–∫–ª–∞–¥')

    firms = {
        '–§–û–ü': Firm.objects.get(name='–§–û–ü –¢–µ—Å—Ç–æ–≤–∏–π'),
        '–¢–û–í': Firm.objects.get(name='–¢–û–í –¢–µ—Å—Ç–æ–≤–∏–π')
    }

    products = Product.objects.filter(name__in=[
        '–§–∞—Ä—à', '–§–∞—Ä—à –≤ –ø–∞–∫–µ—Ç–∏–∫—É', '–í—ñ—Å–∫—ñ', '–í—ñ—Å–∫—ñ –ø–æ—Ä—Ü—ñ—è'
    ])

    for firm_type, firm in firms.items():
        print(f"\nüè¢ –§—ñ—Ä–º–∞: {firm.name} ({firm_type})")
        for product in products.filter(firm=firm):
            stock = FIFOStockManager.get_available_stock(product, warehouse, firm)
            if stock > 0:
                value = FIFOStockManager.get_stock_value(product, warehouse, firm)
                avg_cost = value / stock if stock > 0 else 0
                print(f"   üì¶ {product.name}: {stock} {product.unit.symbol}, –≤–∞—Ä—Ç—ñ—Å—Ç—å {value:.2f}, —Å–µ—Ä–µ–¥–Ω—è {avg_cost:.2f}")

    print("\nüìë –ü–µ—Ä–µ–≤—ñ—Ä –ü–î–í –≤ —Ç–∞–±–ª–∏—Ü—ñ DocumentItem (price, vat_amount, price_with_vat)")
    print("üëâ –ê–±–æ –≤—Ä—É—á–Ω—É —á–µ—Ä–µ–∑ –∞–¥–º—ñ–Ω–∫—É –∞–±–æ SQL")

if __name__ == "__main__":
    show_stock_and_vat()
