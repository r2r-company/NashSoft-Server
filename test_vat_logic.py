# test_vat_logic.py
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'nashsoft.settings')
django.setup()

from decimal import Decimal
from backend.models import *
from backend.services.document_services import *


def test_vat_logic():
    print("üßæ –¢–ï–°–¢–£–í–ê–ù–ù–Ø –õ–û–ì–Ü–ö–ò –ü–î–í")
    print("=" * 40)

    # –û—Ç—Ä–∏–º—É—î–º–æ —Ñ—ñ—Ä–º–∏
    tov_firm = Firm.objects.get(name='–¢–û–í "–ì–æ–ª–æ–≤–Ω–∞ —Ñ—ñ—Ä–º–∞"')
    fop_firm = Firm.objects.get(name='–§–û–ü –í—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è')

    company = Company.objects.first()
    warehouse = Warehouse.objects.first()
    supplier = Supplier.objects.first()
    product = Product.objects.first()
    unit = Unit.objects.first()

    print(f"üìã –§–Ü–†–ú–ò –î–õ–Ø –¢–ï–°–¢–£–í–ê–ù–ù–Ø:")
    print(f"   {tov_firm.name} ({tov_firm.vat_type})")
    print(f"   {fop_firm.name} ({fop_firm.vat_type})")

    # –¢–µ—Å—Ç 1: –ü–æ—Å—Ç—É–ø–ª–µ–Ω–Ω—è –¥–ª—è –¢–û–í (–ó –ü–î–í)
    print(f"\nüí∞ –¢–ï–°–¢ 1: –ü–û–°–¢–£–ü–õ–ï–ù–ù–Ø –î–õ–Ø –¢–û–í")

    receipt_tov = Document.objects.create(
        doc_type='receipt',
        doc_number='TEST-TOV-001',
        company=company,
        firm=tov_firm,
        warehouse=warehouse,
        supplier=supplier
    )

    item_tov = DocumentItem.objects.create(
        document=receipt_tov,
        product=product,
        quantity=10,
        unit=unit,
        price=120,  # –¶—ñ–Ω–∞ –∑ –ü–î–í
        vat_percent=20
    )

    # –ó–∞—Å—Ç–æ—Å–æ–≤—É—î–º–æ –ü–î–í –ª–æ–≥—ñ–∫—É
    from backend.services.document_services import apply_vat
    apply_vat(item_tov)
    item_tov.refresh_from_db()

    print(f"   –¢–û–í - –¶—ñ–Ω–∞: {item_tov.price}")
    print(f"   –¢–û–í - –ë–µ–∑ –ü–î–í: {item_tov.price_without_vat}")
    print(f"   –¢–û–í - –ü–î–í: {item_tov.vat_amount}")
    print(f"   –¢–û–í - –ó –ü–î–í: {item_tov.price_with_vat}")

    # –¢–µ—Å—Ç 2: –ü–æ—Å—Ç—É–ø–ª–µ–Ω–Ω—è –¥–ª—è –§–û–ü (–ë–ï–ó –ü–î–í)
    print(f"\nüí∞ –¢–ï–°–¢ 2: –ü–û–°–¢–£–ü–õ–ï–ù–ù–Ø –î–õ–Ø –§–û–ü")

    receipt_fop = Document.objects.create(
        doc_type='receipt',
        doc_number='TEST-FOP-001',
        company=company,
        firm=fop_firm,
        warehouse=warehouse,
        supplier=supplier
    )

    item_fop = DocumentItem.objects.create(
        document=receipt_fop,
        product=product,
        quantity=10,
        unit=unit,
        price=120,  # –¶—ñ–Ω–∞ –±–µ–∑ –ü–î–í
        vat_percent=20  # –ë—É–¥–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω–æ –Ω–∞ 0
    )

    apply_vat(item_fop)
    item_fop.refresh_from_db()

    print(f"   –§–û–ü - –¶—ñ–Ω–∞: {item_fop.price}")
    print(f"   –§–û–ü - –ë–µ–∑ –ü–î–í: {item_fop.price_without_vat}")
    print(f"   –§–û–ü - –ü–î–í: {item_fop.vat_amount}")
    print(f"   –§–û–ü - –ó –ü–î–í: {item_fop.price_with_vat}")

    # –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
    print(f"\nüìä –ü–û–†–Ü–í–ù–Ø–ù–ù–Ø:")
    print(f"   –¢–û–í —Å–ø–ª–∞—á—É—î –ü–î–í: {item_tov.vat_amount} –≥—Ä–Ω")
    print(f"   –§–û–ü —Å–ø–ª–∞—á—É—î –ü–î–í: {item_fop.vat_amount} –≥—Ä–Ω")
    print(f"   –†—ñ–∑–Ω–∏—Ü—è –≤ –ü–î–í: {item_tov.vat_amount - item_fop.vat_amount} –≥—Ä–Ω")

    # –û—á–∏—â–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö
    receipt_tov.delete()
    receipt_fop.delete()

    print(f"\n‚úÖ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù–û!")


if __name__ == "__main__":
    test_vat_logic()